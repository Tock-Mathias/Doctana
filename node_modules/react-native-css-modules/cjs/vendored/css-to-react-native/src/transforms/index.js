"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const tokenTypes_1 = require("../tokenTypes");
const border_1 = __importDefault(require("./border"));
const boxShadow_1 = __importDefault(require("./boxShadow"));
const flex_1 = __importDefault(require("./flex"));
const flexFlow_1 = __importDefault(require("./flexFlow"));
const font_1 = __importDefault(require("./font"));
const fontFamily_1 = __importDefault(require("./fontFamily"));
const placeContent_1 = __importDefault(require("./placeContent"));
const textDecoration_1 = __importDefault(require("./textDecoration"));
const textDecorationLine_1 = __importDefault(require("./textDecorationLine"));
const textShadow_1 = __importDefault(require("./textShadow"));
const transform_1 = __importDefault(require("./transform"));
const util_1 = require("./util");
const background = tokenStream => ({
    backgroundColor: tokenStream.expect(tokenTypes_1.COLOR),
});
const borderColor = (0, util_1.directionFactory)({
    types: [tokenTypes_1.COLOR],
    prefix: 'border',
    suffix: 'Color',
});
const borderRadius = (0, util_1.directionFactory)({
    directions: ['TopLeft', 'TopRight', 'BottomRight', 'BottomLeft'],
    prefix: 'border',
    suffix: 'Radius',
});
const borderWidth = (0, util_1.directionFactory)({ prefix: 'border', suffix: 'Width' });
const margin = (0, util_1.directionFactory)({
    types: [tokenTypes_1.LENGTH, tokenTypes_1.UNSUPPORTED_LENGTH_UNIT, tokenTypes_1.PERCENT, tokenTypes_1.AUTO],
    prefix: 'margin',
});
const padding = (0, util_1.directionFactory)({ prefix: 'padding' });
const fontVariant = tokenStream => ({
    fontVariant: [tokenStream.expect(tokenTypes_1.IDENT)],
});
const fontWeight = tokenStream => ({
    fontWeight: tokenStream.expect(tokenTypes_1.WORD), // Also match numbers as strings
});
const shadowOffset = tokenStream => ({
    shadowOffset: (0, util_1.parseShadowOffset)(tokenStream),
});
const textShadowOffset = tokenStream => ({
    textShadowOffset: (0, util_1.parseShadowOffset)(tokenStream),
});
exports.default = {
    background,
    border: border_1.default,
    borderColor,
    borderRadius,
    borderWidth,
    boxShadow: boxShadow_1.default,
    flex: flex_1.default,
    flexFlow: flexFlow_1.default,
    font: font_1.default,
    fontFamily: fontFamily_1.default,
    fontVariant,
    fontWeight,
    margin,
    padding,
    placeContent: placeContent_1.default,
    shadowOffset,
    textShadow: textShadow_1.default,
    textShadowOffset,
    textDecoration: textDecoration_1.default,
    textDecorationLine: textDecorationLine_1.default,
    transform: transform_1.default,
};
