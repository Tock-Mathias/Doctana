"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tokenTypes_1 = require("../tokenTypes");
const STYLE = (0, tokenTypes_1.regExpToken)(/^(solid|double|dotted|dashed)$/);
const defaultTextDecorationLine = 'none';
const defaultTextDecorationStyle = 'solid';
const defaultTextDecorationColor = 'black';
exports.default = tokenStream => {
    let line;
    let style;
    let color;
    let didParseFirst = false;
    while (tokenStream.hasTokens()) {
        if (didParseFirst)
            tokenStream.expect(tokenTypes_1.SPACE);
        if (line === undefined && tokenStream.matches(tokenTypes_1.LINE)) {
            const lines = [tokenStream.lastValue.toLowerCase()];
            tokenStream.saveRewindPoint();
            if (lines[0] !== 'none' &&
                tokenStream.matches(tokenTypes_1.SPACE) &&
                tokenStream.matches(tokenTypes_1.LINE)) {
                lines.push(tokenStream.lastValue.toLowerCase());
                // Underline comes before line-through
                lines.sort().reverse();
            }
            else {
                tokenStream.rewind();
            }
            line = lines.join(' ');
        }
        else if (style === undefined && tokenStream.matches(STYLE)) {
            style = tokenStream.lastValue;
        }
        else if (color === undefined && tokenStream.matches(tokenTypes_1.COLOR)) {
            color = tokenStream.lastValue;
        }
        else {
            tokenStream.throw();
        }
        didParseFirst = true;
    }
    return {
        textDecorationLine: line !== undefined ? line : defaultTextDecorationLine,
        textDecorationColor: color !== undefined ? color : defaultTextDecorationColor,
        textDecorationStyle: style !== undefined ? style : defaultTextDecorationStyle,
    };
};
