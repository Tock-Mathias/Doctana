import { Platform, StyleSheet } from "react-native";
import * as React from "react";
import { useCallback, useContext } from "react";
import { processDynamicStyles } from "./DynamicStyleProcessor";
import { processWebStylePrecedence } from "./WebStylePrecedanceProcessor";
export const DynamicStyleOptionsContext = React.createContext({ vars: {} });
export const setupDynamicWarning = () => {
    let hasWarned = false;
    StyleSheet.setStyleAttributePreprocessor("__dynamic", () => {
        if (!hasWarned) {
            hasWarned = true;
            console.warn("[react-native-css-modules] Unprocessed style added to element");
        }
        return undefined;
    });
};
export const useDynamicWebStyles = () => {
    return useCallback((style) => {
        return processWebStylePrecedence(style);
    }, []);
};
export const useDynamicStyles = () => {
    if (Platform.OS === "web") {
        return useDynamicWebStyles();
    }
    const { vars, baseFontSize } = useContext(DynamicStyleOptionsContext);
    return useCallback((style) => {
        if (!style) {
            return style;
        }
        return processDynamicStyles(style, {
            vars,
            baseFontSize
        }).result;
    }, []);
};
